[{"/Users/ht/Desktop/dev/carcentives-frontend/src/index.js":"1","/Users/ht/Desktop/dev/carcentives-frontend/src/reportWebVitals.js":"2","/Users/ht/Desktop/dev/carcentives-frontend/src/utils/useAPIService.js":"3","/Users/ht/Desktop/dev/carcentives-frontend/src/components/CarMakeSelection.js":"4","/Users/ht/Desktop/dev/carcentives-frontend/src/utils/dialogSpinner.js":"5"},{"size":663,"mtime":1612059002401,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612053619611,"results":"8","hashOfConfig":"7"},{"size":877,"mtime":1611714404715,"results":"9","hashOfConfig":"7"},{"size":5270,"mtime":1612059812312,"results":"10","hashOfConfig":"7"},{"size":732,"mtime":1612058816011,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mq4x4b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/ht/Desktop/dev/carcentives-frontend/src/index.js",[],["25","26"],"/Users/ht/Desktop/dev/carcentives-frontend/src/reportWebVitals.js",[],"/Users/ht/Desktop/dev/carcentives-frontend/src/utils/useAPIService.js",[],["27","28"],"/Users/ht/Desktop/dev/carcentives-frontend/src/components/CarMakeSelection.js",["29","30","31"],"/* eslint-disable max-len */\n/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Select, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  makeStyles,\n  TextField,\n  Button\n} from '@material-ui/core';\nimport { useAPIService } from '../utils/useAPIService';\nimport { DialogSpinner } from '../utils/dialogSpinner.js';\n\nfunction CarMakeSelection(props) {\n  const classes = useStyles();\n  const [make] = useFormInput('');\n  const [model, updateModel] = useFormInput('');\n  const [zipCode] = useFormInput('');\n  const [isValid, updateIsValid] = useFormInput(false);\n  const [dialogOpen, setDialogOpen] = useState(true);\n  const [dialogMessage, setDialogMessage] = useState(\"Setting up\");\n  const [isDisable, setIsDisable] = useState(true);\n\n  const [makeService, makeServiceAPICall] = useAPIService();\n  const [modelService, modelServiceAPICall, modelSetData] = useAPIService();\n  const [zipService, zipServiceAPICall] = useAPIService();\n  const [carSubmissionService, carSubmmissionServiceAPICall] = useAPIService();\n\n  // Makes API Call\n  useEffect(() => {\n    setDialogMessage(`Retrieving makes`);\n    makeServiceAPICall('/makes', 'GET', {}, {});\n  }, [makeServiceAPICall]);\n\n  // Models API Call\n  useEffect(() => {\n    if(make.value !== \"\") {\n      updateModel(\"\");\n      let params = {\n        selectedMake: make.value\n      }\n      setDialogMessage(`Retrieving models for ${make.value}`);\n      modelServiceAPICall('/models', 'GET', params, {});\n    } else if(make.value === \"\") {\n      updateModel(\"\");\n      modelSetData([]);\n    }\n  }, [make.value]);\n\n  // Zip Validation\n  useEffect(() => {\n    if(zipCode.value.length === 5 && !isNaN(zipCode.value)) {\n      let params = {\n        zipCode: zipCode.value\n      }\n      setDialogMessage(`Validating Zip Code`);\n      zipServiceAPICall('/validateZip', 'GET', params, {});\n    } \n    updateIsValid(false);\n  }, [zipCode.value]);\n\n  useEffect(() => {\n    if(zipService.data.City && zipService.data.State ) {\n      updateIsValid(true);\n    } else {\n      updateIsValid(false);\n    }\n  }, [zipService.data]);\n\n  useEffect(() => {\n    if( makeService.isLoading === true ||\n        modelService.isLoading === true ||\n        zipService.isLoading === true\n      ) {\n        setDialogOpen(true);\n      } else {\n        setDialogOpen(false);\n      }\n  }, [makeService.isLoading, modelService.isLoading, zipService.isLoading, carSubmissionService.isLoading]);\n\n  useEffect(() => {\n    if(isValid.value && zipCode.value.length === 5 && make.value.length > 0 && model.value.length > 0) {\n      setIsDisable(false);\n    } else {\n      setIsDisable(true);\n    }\n  }, [zipCode.value, isValid.value, make.value, model.value]);\n\n  function handleCarSubmit() {\n    let params = {\n      make: make.value,\n      model: model.value,\n      zipCode: zipCode.value\n    }\n    carSubmmissionServiceAPICall('/carSubmission', 'POST', params, {});\n  }\n\n  return (\n    <div className=\"car-make-selection\">\n\n      <DialogSpinner dialogOpen={dialogOpen} message={dialogMessage}/>\n\n      <div className={[\"make-model-zip-form\", classes.formContainer]}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"makeLabel\">\n            Make\n          </InputLabel>\n          <Select {...make}>\n            <MenuItem value=\"\">\n              <em> None </em>\n            </MenuItem>\n            {makeService.data.map((currentMake, index) => <MenuItem value={currentMake} key={index}>{ currentMake }</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"modelLabel\">\n            Model\n          </InputLabel>\n          <Select {...model}>\n            <MenuItem value=\"\">\n              <em> None </em>\n            </MenuItem>\n            {modelService.data.map((currentModel, index) => <MenuItem value={currentModel} key={index}>{ currentModel }</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            error={!isValid.value || zipCode.value.length < 5}\n            onChange={zipCode.onChange}\n            helperText={isValid.value ? \"\" : \"Invalid Zip Code\"}\n            required id=\"standard-error\"\n            label=\"Zip Code\"\n            inputProps={{maxLength: 5}}\n          />\n        </FormControl>\n      </div>\n\n      <div className={classes.buttonContainer}>\n        <Button\n          className={classes.button}\n          disabled={isDisable}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleCarSubmit}\n          >Submit\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction useFormInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function updateValue(newValue) {\n    setValue(newValue);\n  }\n\n  return [{value, onChange: handleChange}, updateValue];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formContainer: {\n    textAlign: \"center\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200\n  },\n  buttonContainer: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n    textAlign: \"center\",\n  },\n  button: {\n    size: \"large\"\n  }\n}));\n\nexport { CarMakeSelection };\n","/Users/ht/Desktop/dev/carcentives-frontend/src/utils/dialogSpinner.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"32","replacedBy":"36"},{"ruleId":"34","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":50,"column":6,"nodeType":"40","endLine":50,"endColumn":18,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":62,"column":6,"nodeType":"40","endLine":62,"endColumn":21,"suggestions":"43"},{"ruleId":"38","severity":1,"message":"44","line":70,"column":6,"nodeType":"40","endLine":70,"endColumn":23,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],["46"],["47"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'modelServiceAPICall', 'modelSetData', and 'updateModel'. Either include them or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has missing dependencies: 'updateIsValid' and 'zipServiceAPICall'. Either include them or remove the dependency array.",["49"],"React Hook useEffect has a missing dependency: 'updateIsValid'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [make.value, modelServiceAPICall, modelSetData, updateModel]",{"range":"57","text":"58"},"Update the dependencies array to be: [updateIsValid, zipCode.value, zipServiceAPICall]",{"range":"59","text":"60"},"Update the dependencies array to be: [updateIsValid, zipService.data]",{"range":"61","text":"62"},[1581,1593],"[make.value, modelServiceAPICall, modelSetData, updateModel]",[1904,1919],"[updateIsValid, zipCode.value, zipServiceAPICall]",[2079,2096],"[updateIsValid, zipService.data]"]